@page "/editProvinceAndVaccine"


<h1>Seleccione lo que desea editar</h1>
<select class="rounded-sm p-2 border-2 border-gray-300" @onchange="edition">
    <option></option>
    <option value="provincia">Provincias</option>
    <option value="vacunas">vacunas </option>
</select>

@if (edicion == "provincia")
{
    <select class="rounded-sm p-2 border-2 border-gray-300" @onchange="actualizar">
        @foreach (var i in provincias)
        {
            <option value="@i.IdProvincia, @i.Province1">@i.Province1</option>
        }
    </select>

    <input class="rounded-sm p-2 border-2 border-gray-300" @bind="datos">
    <button class="m-1 p-3 bg-green-600 text-white rounded-sm hover:bg-green-800 transition-colors duration-500"
    @onclick="actualizar2">actualizar</button>
    <button class="m-1 p-3 bg-red-600 text-white rounded-sm hover:bg-red-800 transition-colors duration-500"
    @onclick="eliminar">eliminar</button>
}
else if (edicion == "vacunas")
{

    <select class="rounded-sm p-2 border-2 border-gray-300" @onchange="actualizar">
        @foreach (var i in vacunas)
        {
            <option value="@i.Idvaccine,@i.Vaccine1">@i.Vaccine1</option>

        }
    </select>
    <input class="rounded-sm p-2 border-2 border-gray-300" @bind="datos">
    <button class="m-1 p-3 bg-green-600 text-white rounded-sm hover:bg-green-800 transition-colors duration-500"
    @onclick="actualizar2">actualizar</button>
    <button class="m-1 p-3 bg-red-600 text-white rounded-sm hover:bg-red-800 transition-colors duration-500"
    @onclick="eliminar">eliminar</button>

}

@code {
    private string edicion { get; set; }
    private int id { get; set; }
    private string datos { get; set; }
    dynamic provincias = new vaccinationsContext().Provinces;
    dynamic vacunas = new vaccinationsContext().Vaccines;

    public void edition(ChangeEventArgs e)
    {
        edicion = e.Value.ToString();
        datos = string.Empty;
    }

    public void actualizar(ChangeEventArgs e)
    {
        string valores = e.Value.ToString();
        string espacios = valores.Substring(2);
        datos = espacios.Replace(" ", "");
        id = Convert.ToInt32(valores.Substring(0, 1));

    }

    public void actualizar2()
    {
        if (edicion == "provincia")
        {
            var provinciasAgregadas = new Province { IdProvincia = id };
            using (var db = new vaccinationsContext())
            {
                db.Provinces.Attach(provinciasAgregadas);
                provinciasAgregadas.Province1 = datos;
                db.SaveChanges();
                limpiarVariables();
            }
        }
        else if (edicion == "vacunas")
        {
            var vacunasAgregadas = new Vaccine { Idvaccine = id };
            using (var db = new vaccinationsContext())
            {
                db.Vaccines.Attach(vacunasAgregadas);
                vacunasAgregadas.Vaccine1 = datos;
                db.SaveChanges();
                limpiarVariables();
            }
        }

    }

    public void eliminar()
    {
        if (edicion == "provincia")
        {
            var provinciasAgregadas = new Province { IdProvincia = id };
            using (var db = new vaccinationsContext())
            {
                db.Provinces.Attach(provinciasAgregadas);
                db.Provinces.Remove(provinciasAgregadas);
                db.SaveChanges();
                limpiarVariables();
            }
        }
        else if (edicion == "vacunas")
        {
            var vacunasAgregadas = new Vaccine { Idvaccine = id };
            using (var db = new vaccinationsContext())
            {
                db.Vaccines.Attach(vacunasAgregadas);
                db.Vaccines.Remove(vacunasAgregadas);
                db.SaveChanges();
                limpiarVariables();
            }
        }
    }

    public void limpiarVariables()
    {
        datos = string.Empty;
    }

}